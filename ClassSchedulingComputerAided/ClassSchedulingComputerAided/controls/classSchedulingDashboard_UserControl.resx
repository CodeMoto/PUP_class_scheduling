<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="prgbr1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnSettings.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>